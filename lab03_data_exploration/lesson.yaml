- Class: meta
  Course: mbb343
  Lesson: lab03_data_exploration
  Author: your name goes here
  Type: Standard
  Organization: your organization's name goes here
  Version: 2.4.5

- Class: text
  Output: Welcome to the data exploration lesson! In this installment we will be covering how to install packages and the basics of Tidyverse. 
  
- Class: text
  Output: In lesson 2, we covered the most important data structures in R, including the data frame and its vector columns. While much more is possible in R, these two data structures alone cover most use cases in data science. As a result, we can now start an honest analysis of the worldwide COVID-19 dataset. The EU has a few questions that they would like our team, Pandemic Intelligence, to address as soon as possible.

- Class: text
  Output: In order to take full advantage of R's rich ecosystem, we need to learn how to install third party packages. Packages extend R's base functionality, and are quality checked when hosted on a repository such as CRAN or Bioconductor. CRAN (The Comprehensive R Archive Network) hosts nearly all available general use R packages, whereas Bioconductor hosts most of the bioinformatics R packages. 

- Class: text
  Output: In order to install a package, we use the syntax install.packages("packagename") - When we give R a string, it is case sensitive. This is important when installing packages since the exact package name must be matched in the CRAN repository. The most common package install errors come from not spelling the package name right.
  
- Class: mult_question
  Output: How would you install an R package called datascience from CRAN?
  AnswerChoices: library(datascience);library("datascience");install.packages(datascience);install.packages("datascience");None of the above
  CorrectAnswer: install.packages("datascience")
  AnswerTests: omnitest(correctVal='install.packages("datascience")')
  Hint: The library() function is what we use to load packages we've previously installed into our R session. 
  
  
  
  ######################## bioconductor install
  
  
  
- Class: text
  Output: We will start with two packages from what is called the `tidyverse` suite, hosted on CRAN. The tidyverse is a group of packages designed to work seamlessly together, with the aim of providing an alternative data analysis workflow than what you will find in base R. The two packages we will introduce today are `readr` (for importing and exporting data) and `dplyr` (for exploring and wrangling data). These packages come with functions that are often faster and more convenient to use than their base R equivalents. They're essential tools in your data science toolbox.
    
- Class: cmd_question
  Output: Try to install readr and dplyr using the install.packages() function. Note that you can install multiple packages by using a vector with your package names. Try it below. 
  CorrectAnswer: install.packages(c("readr", "dplyr"))
  AnswerTests: omnitest(correctExpr='install.packages(c("readr", "dplyr"))')
  Hint: A vector of strings can be made by using c("one", "two")

- Class: text
  Output: Now that we've installed the packaged needed to read in our data files, we need to tell R which files we intend to use. This involves using our working directory to navigate to where the files are. Our working directory is the folder in the file system where our current R session has set itself up. 
  
- Class: cmd_question
  Output: To see where our R session currently is, use getwd() - short for get working directory. 
  CorrectAnswer: getwd() #throws error unless it gets getwd for some reason
  AnswerTests: omnitest(correctVal='getwd()')
  Hint: Try typing the command verbatim, without any arguments.

- Class: mult_question
  Output: Based on the abbreviation of getwd(), what would most likely be the function to set your working directory?
  AnswerChoices: setwd();getwd();wd();cwd();None of the above
  CorrectAnswer: setwd()
  AnswerTests: omnitest(correctVal='setwd()')
  Hint: Functions are typically named with readability in mind, try reading over each abbreviation carefully.
    
- Class: mult_question
  Output: Let's say your current working directory is /home/someone/. Which of the following file paths does not refer to the data.csv file in your downloads folder?
  AnswerChoices: /home/someone/downloads/data.csv;~/downloads/data.csv;../someone/downloads/data.csv;downloads/./data.csv;None of the above
  CorrectAnswer: downloads/./data.csv
  AnswerTests: omnitest(correctVal='downloads/./data.csv')
  Hint: In file systems, ~ and . have special meanings, and refer to specific places on your computer- . means 'relative to where I currently am' and ~ means 'relative to home'
   
- Class: text
  Output: Let's explore monthly COVID-19 statistics for territories spanning the globe, not just Canada. The data was originally downloaded from the [EU Open Data Portal](https://data.europa.eu/euodp/en/data/dataset/covid-19-coronavirus-data). It was lightly processed and filtered for this tutorial. Note that the last month might not be complete if the data was downloaded mid-month.

 
  
  
  
  
  
  
  
  
